export interface Place {
	id: string;
	folderid: string;
	name: string;
	description?: string;
	link?: string;
	latitude: number;
	longitude: number;
	altitudecapability?: number;
	time?: string;
	srt: number;
	common: boolean;
	geomark: boolean;
	userid: string;
	images?: Array<Image>;
	type: string;
	added: boolean;
	deleted: boolean;
	updated: boolean;
	show: boolean;
};
export interface Image {
	id: string;
	placeid: string;
	file: string;
	type: string;
	lastmodified: string;
	size: number;
	srt: number;
};
export interface Folder {
	id: string;
	parent: string | null;
	name: string;
	description?: string;
	srt: number;
	geomarks: number;
	builded: boolean;
	type: string;
	added: boolean;
	deleted: boolean;
	updated: boolean;
	opened: boolean;
	userid: string;
	children?: Array<Folder>;
};
export interface User {
	id: string;
	login: string;
	password: string;
	name: string;
	email: string;
	phone: string;
	confirmed: boolean;
	confirmbefore: string;
	token: string;
	homeplace: string;
	testaccount: boolean;
};
export interface State {
	refreshing: boolean;
	saved: boolean;
	idleTime: number;
	stateBackups?: Array<State>;
	stateBackupsIndex: number;
	inUndoRedo: boolean;
	user: User | null;
	currentPlace: Place | null;
	homePlace: Place | null;
	currentPlaceIndex: number;
	places: Array<Place>;
	folders: Array<Folder>;
	commonPlaces: Array<Place>;
	center: {
		latitude: number;
		longitude: number;
	};
	zoom: number;
	placemarksShow: boolean;
	commonPlacemarksShow: boolean;
	centerPlacemarkShow: boolean;
	ready: boolean;
	messages: string[];
	placeFields: {
		name               : string;
		description        : string;
		link               : string;
		latitude           : string;
		longitude          : string;
		altitudecapability : string;
		time               : string;
		srt                : string;
		common             : string;
		images             : string;
	};
	lengths: {
		name        : number;
		description : number;
		url         : number;
	};
	messageTimer: number;
	mouseOverMessages: boolean;
	serverConfig: Record<string, any> | null;
};
